---

# ensure mounted boot
- name: mount boot
  ansible.posix.mount:
    path: /boot
    state: mounted
    src: /dev/mmcblk0p1
    fstype: vfat
  changed_when: False

- name: enable camera_usb_options setting in octopi.txt
  ansible.builtin.lineinfile:
    path: /boot/octopi.txt
    regexp: '^camera_usb_options='
    line: 'camera_usb_options="{{ octoprint_camera_usb_options }}"'
  when: octoprint_camera_usb_options is defined

- name: configure octoprint backup
  ansible.builtin.lineinfile:
    dest: /etc/oxiscripts/jobs/backup-documents.sh
    regexp: '/home/pi/.octoprint'
    line: 'EXCLUDED_DIR="/home/pi/.octoprint/timelapse/ /home/pi/.octoprint/timelapse_finished/" rdiffbackup /home/pi/.octoprint octoprint 3M'

- name: enable documents backup
  ansible.builtin.file:
    src: /etc/oxiscripts/jobs/backup-documents.sh
    dest: /etc/cron.daily/backup-documents
    owner: root
    group: root
    state: link

# - name: ensuring ffmpeg for timelapses
#   ansible.builtin.package:
#     name: libav-tools
#     state: present

- name: disable webcamd to only show webcam while printing
  ansible.builtin.service:
    name: webcamd
    enabled: no

- name: deploy sudo permission file for webcamd control
  ansible.builtin.copy:
    src: webcamd-control
    dest: /etc/sudoers.d/webcamd-control
    owner: root
    group: root
    mode: '0644'

- name: ensure path for scripts (/opt/octoprint-timelapse)
  ansible.builtin.file:
    path: /opt/octoprint-timelapse
    state: directory
    owner: root
    group: root
    mode: '0750'

- name: deploy octoprint timelapse sync script
  ansible.builtin.template:
    src: octoprint-timelapse-sync.sh.jinja2
    dest: /opt/octoprint-timelapse/octoprint-timelapse-sync.sh
    owner: root
    group: root
    mode: '0750'

- name: ensure timelapse upload cronjob
  ansible.builtin.cron:
    name: "Sync octoprint timelapses"
    minute: "35"
    hour: "*"
    job: "perl -le 'sleep rand 150' && /opt/octoprint-timelapse/octoprint-timelapse-sync.sh >/dev/null"

- name: ensure backup cronjob
  ansible.builtin.cron:
    name: "Octoprint backup"
    minute: "20"
    hour: "00"
    user: "pi"
    job: "/home/pi/oprint/bin/octoprint plugins backup:backup --exclude uploads --exclude timelapse > /dev/null 2>&1"

- name: ensure backup cleanup cronjob
  ansible.builtin.cron:
    name: "Octoprint backup cleanup"
    minute: "20"
    hour: "01"
    user: "pi"
    job: "/usr/bin/find /home/pi/.octoprint/data/backup/ -type f -iname '*.zip' -mtime +7 -delete > /dev/null"

- name: ensure avrdude for the fwupdater plugin
  ansible.builtin.package:
    name: avrdude
    state: present

